<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="main.components.*"
		 width="600">
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			
			import core.structs.News;
			
			import gim.components.GimBrowser;
			
			import spark.components.VGroup;
			
			public var browser:GimBrowser;

			private var items:Object = {};
			/**
			 * set dataprovider for update display list
			 * */
			public function set dataProvider(value:Object):void
			{
				container.removeAllElements();
				vGroups = [];
				itemIndex = 0;
				controlBar.visible = false;
				container.x = 0;
				pageNumber = 1;
				
				for each(var news:News in value)
				{
					var newsListItem:NewsListItem;
					if(items[news.id])
					{
						newsListItem = items[news.id];
					}
					else
					{
						newsListItem = new NewsListItem();
						container.addElement(newsListItem);
						newsListItem.width = 600;
						newsListItem.height = 40;
						var str:String = news.title[AppConfig.instance.currentLanguageID] + "................................................................................................................................";
						newsListItem.text = str;
						newsListItem.url = news.contentPageURL[AppConfig.instance.currentLanguageID];
						newsListItem.addEventListener(MouseEvent.CLICK,onItemClick);
						items[news.id] = newsListItem;
					}
					
					if(itemIndex % numItemPerGroup == 0)
					{
						var vGroup:VGroup = new VGroup();
						vGroups.push(vGroup);
						vGroup.width = 600;
						container.addElement(vGroup);
					}
					VGroup(vGroups[vGroups.length - 1]).addElement(newsListItem);
					itemIndex ++;
				}
				
				if(vGroups.length > 1)
					controlBar.visible = true;
			}
			private var numItemPerGroup:int = 17;
			private var itemIndex:int;
			private var vGroups:Array = [];
			[Bindable] private var pageNumber:int = 1;
			
			/**
			 * item click handler
			 * */
			protected function onItemClick(event:MouseEvent):void
			{
				var url:String = NewsListItem(event.currentTarget).url;
				if(url && browser)
				{
					browser.navigateTo(AppConfig.instance.server + url);
				}
			}
			
			/**
			 * pre page
			 * */
			protected function prePage(event:MouseEvent):void
			{
				if(pageNumber > 1)
				{
					pageNumber --;
					updateTween(- container.width * (pageNumber - 1));
				}
			}
			
			/**
			 * next page
			 * */
			protected function nextPage(event:MouseEvent):void
			{
				if(pageNumber < vGroups.length)
				{
					pageNumber ++;
					updateTween(- container.width * (pageNumber - 1));
				}
			}
			
			/**
			 * update animate of container
			 * */
			private function updateTween(aimX:Number):void
			{
				Tweener.removeTweens(container);
				Tweener.addTween(container,{x:aimX,time:1});
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- mainMask -->
	<s:SkinnableContainer id="mainMask" width="600" height="100%" alpha="0"
						  backgroundColor="0x222222"/>
	
	<!-- container -->
	<s:HGroup id="container" width="600" gap="0" mask="{mainMask}"/>
	
	<!-- controlBar -->
	<s:Group id="controlBar" bottom="20" width="600" height="40">
		<s:Rect width="210" height="48" horizontalCenter="0" radiusX="24" radiusY="24"
				verticalCenter="0">
			<s:fill>
				<s:SolidColor alpha="0.8" color="0x222222"/>
			</s:fill>
		</s:Rect>
		<s:Button label="&lt;" click="prePage(event)" horizontalCenter="-80"
				  skinClass="skins.MapScalerVScrollerBarButtonSkin" verticalCenter="0"/>
		<s:Button label="&gt;" click="nextPage(event)" horizontalCenter="80"
				  skinClass="skins.MapScalerVScrollerBarButtonSkin" verticalCenter="0"/>
		<s:Label id="label" color="0xffffff" horizontalCenter="0" text="{pageNumber.toString()}"
				 verticalCenter="0"/>
	</s:Group>
	
	<!-- filters -->
	<s:filters>
		<fx:Array>
			<s:DropShadowFilter distance="0"/>
		</fx:Array>
	</s:filters>
</s:Group>
